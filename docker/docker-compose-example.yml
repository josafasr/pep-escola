version: "3"

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: pepescola
      POSTGRES_DB: pepescola
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
     - app-network

  nodejs:
    # build:
    #   context: ./server
    #   dockerfile: Dockerfile
    image: nodejs:1.0.0
    container_name: nodejs
    hostname: nodejs
    restart: unless-stopped
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    image: nginx:1.21.1
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - nodejs
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email to.change@email.com --agree-tos --no-eff-email --force-renewal -d example.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /usr/src/prontuario/client/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /usr/src/prontuario/dhparam/
      o: bind

networks:
   app-network:
     driver: bridge
